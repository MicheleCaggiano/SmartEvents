@model TangOrganizer.Dashboard.Models.EventoViewModel

  @{
    ViewBag.Title = "Modifica";
  }

  <div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
      <h2>Modifica</h2>
      <ol class="breadcrumb">
        <li>
          @Html.ActionLink("Eventi", "Index")
        </li>
        <li class="active">
          <strong>@Model.Evento.Nome</strong>
        </li>
      </ol>
    </div>
    <div class="col-sm-8">
      <div class="title-action">
        @Html.ActionLink("I miei eventi", "Index", null, new { @class = "btn btn-primary" })
      </div>
    </div>
  </div>


  <div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
      <div class="col-lg-12">
        <div class="ibox float-e-margins">
          <div class="ibox-content">
            <form id="my-awesome-dropzone" class="dropzone" action="@Url.Action("SetEventImages", "Evento")" method="post" enctype="multipart/form-data">
              <div class="dropzone-previews"></div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-12">
        <div class="ibox float-e-margins">
          <div class="ibox-title">
            <h5>@Model.Evento.Nome</h5>
          </div>
          <div class="ibox-content">

            @using (Html.BeginForm())
            {
              @Html.AntiForgeryToken()

              <div class="form-horizontal">

                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Evento.Id)

                <div class="form-group">
                  @Html.LabelFor(model => model.Evento.Nome, new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                    @Html.EditorFor(model => model.Evento.Nome)
                    @Html.ValidationMessageFor(model => model.Evento.Nome)
                  </div>
                </div>

                <div class="form-group">
                  @Html.LabelFor(model => model.Evento.Descrizione, new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                    @Html.EditorFor(model => model.Evento.Descrizione)
                    @Html.ValidationMessageFor(model => model.Evento.Descrizione)
                  </div>
                </div>

                <div class="form-group">
                  @Html.LabelFor(model => model.Evento.DataInizio, new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                    @Html.EditorFor(model => model.Evento.DataInizio)
                    @Html.ValidationMessageFor(model => model.Evento.DataInizio)
                  </div>
                </div>

                <div class="form-group">
                  @Html.LabelFor(model => model.Evento.DataFine, new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                    @Html.EditorFor(model => model.Evento.DataFine)
                    @Html.ValidationMessageFor(model => model.Evento.DataFine)
                  </div>
                </div>

                <div class="form-group">
                  @Html.LabelFor(model => model.Evento.Luogo, new { @class = "control-label col-md-2" })
                  <div class="col-md-10">
                    @Html.EditorFor(model => model.Evento.Luogo)
                    @Html.ValidationMessageFor(model => model.Evento.Luogo)
                  </div>
                </div>


                <div class="form-group">
                  <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white" })
                  </div>
                </div>
              </div>
            }

          </div>
        </div>
      </div>
    </div>

    @* Milonghe e Lezioni *@
    <div class="row">
      <div class="col-lg-6">
        <div class="ibox float-e-margins">
          <div class="ibox-title">
            <h5>Milonghe</h5>
            <div class="ibox-tools">
              @Html.ActionLink("Aggiungi milonga", "CreateMilonga", "Attivita", new { eventoId = Model.Evento.Id }, new { @class = "btn btn-primary btn-xs" })
            </div>
          </div>
          <div class="ibox-content">
            @Html.Partial("_ListaMilonghe", Model.Milonghe)
        </div>
      </div>
    </div>
    <div class="col-lg-6">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <h5>Lezioni</h5>
          <div class="ibox-tools">
            @Html.ActionLink("Aggiungi lezione", "CreateLezione", "Attivita", new { eventoId = Model.Evento.Id }, new { @class = "btn btn-primary btn-xs" })
          </div>
        </div>
        <div class="ibox-content">
          @Html.Partial("_ListaLezioni", Model.Lezioni)
        </div>
      </div>
    </div>
  </div>

  @* Pacchetti *@
  <div class="row">
    <div class="col-lg-12">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <h5>Pacchetti</h5>
        </div>
        <div class="ibox-content">

        </div>
      </div>
    </div>

  </div>
</div>

@section Styles {
  @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
}

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
  @Scripts.Render("~/plugins/dropZone")

  <script type="text/javascript">
    $(document).ready(function () {

      Dropzone.options.myAwesomeDropzone = {

        autoProcessQueue: true,
        parallelUploads: 1,
        maxFiles: 1,
        paramName: "files",
        maxFilesize: 5, // MB
        createImageThumbnails: false,

        // Dropzone settings
        init: function () {
          var eventId = "@Model.Evento.Id";
          this.on("sending", function (file, xhr, formData) {
            formData.append("EventId", eventId);
          });
          this.on("successmultiple", function (files, response) {
          });
          this.on("errormultiple", function (files, response) {
          });
        }

      }
      @*var myDropzone = new Dropzone("div#eventDropZone", {
        url: "/Event/SetEventImages",
        autoProcessQueue: true,
        parallelUploads: 1,
        maxFiles: 1,
        paramName: "files",

        // Dropzone settings
        init: function () {
          this.on("sending", function (file, xhr, formData) {
            formData.append("EventId", "@Model.Evento.Id");
          });
          this.on("success", function (files, response) {
          });
          this.on("error", function (files, response) {
          });
        }
      });*@
    });
  </script>
}
